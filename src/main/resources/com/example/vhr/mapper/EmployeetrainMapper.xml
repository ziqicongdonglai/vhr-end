<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.vhr.mapper.EmployeetrainMapper">
  <resultMap id="BaseResultMap" type="com.example.vhr.model.Employeetrain">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="eid" jdbcType="INTEGER" property="eid" />
    <result column="trainDate" jdbcType="DATE" property="trainDate" />
    <result column="trainContent" jdbcType="VARCHAR" property="trainContent" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Base_Column_List">
    id, eid, trainDate, trainContent, remark
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from employeetrain
    where id = #{id,jdbcType=INTEGER}
  </select>
  <!--<select id="selectAllEmployeetrains" resultType="com.example.vhr.model.Employeetrain">-->

  <!--</select>-->
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from employeetrain
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByIds" parameterType="java.lang.Integer">
    delete from employeetrain where id in
    <foreach collection="array" item="id" open="(" separator="," close=")">
      #{id}
    </foreach>
  </delete>
  <insert id="insert" parameterType="com.example.vhr.model.Employeetrain">
    insert into employeetrain (id, eid, trainDate, 
      trainContent, remark)
    values (#{id,jdbcType=INTEGER}, #{eid,jdbcType=INTEGER}, #{trainDate,jdbcType=DATE},
      #{trainContent,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.vhr.model.Employeetrain">
    insert into employeetrain
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="eid != null">
        eid,
      </if>
      <if test="trainDate != null">
        trainDate,
      </if>
      <if test="trainContent != null">
        trainContent,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="eid != null">
        #{eid,jdbcType=INTEGER},
      </if>
      <if test="trainDate != null">
        #{trainDate,jdbcType=DATE},
      </if>
      <if test="trainContent != null">
        #{trainContent,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.vhr.model.Employeetrain">
    update employeetrain
    <set>
      <if test="eid != null">
        eid = #{eid,jdbcType=INTEGER},
      </if>
      <if test="trainDate != null">
        trainDate = #{trainDate,jdbcType=DATE},
      </if>
      <if test="trainContent != null">
        trainContent = #{trainContent,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.vhr.model.Employeetrain">
    update employeetrain
    set eid = #{eid,jdbcType=INTEGER},
      trainDate = #{trainDate,jdbcType=DATE},
      trainContent = #{trainContent,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>